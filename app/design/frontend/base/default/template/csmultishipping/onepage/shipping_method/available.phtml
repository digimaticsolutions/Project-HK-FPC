<?php 
/**
 * CedCommerce
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
*
 * @category    design
 * @package     base_default
 * @author 		CedCommerce Core Team <coreteam@cedcommerce.com>
 * @copyright   Copyright CEDCOMMERCE (http://cedcommerce.com/)
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
 
?>
<?php /** @var $this Mage_Checkout_Block_Onepage_Shipping_Method_Available */ ?>
<?php $_shippingRateGroups = $this->getShippingRates(); ?>
<?php if (!$_shippingRateGroups): ?>
    <p><?php echo $this->__('Sorry, no quotes are available for this order at this time.') ?></p>
<?php else: ?>
	<?php if($product_name = Mage::getSingleton('checkout/session')->getInvalidItem()){
		Mage::getSingleton('checkout/session')->unsInvalidItem();
		$product_name = implode(', ',$product_name);
	?>
		<p><?php echo $this->__('No quotes are available for product <strong>'.$product_name.' </strong>. Please remove from cart.') ?></p>
	<?php } else{ ?>
    <dl class="sp-methods">
        <?php foreach ($this->getRatesByVendor() as $_vendorId=>$_vendorRates): ?>
		<dt><?php echo $this->escapeHtml($_vendorRates['title']) ?></dt>
		<dd>
    		<ul>
            <?php $_sole = count($_vendorRates['rates']) == 1; foreach ($_vendorRates['rates'] as $_rate): ?>
                <?php $shippingCodePrice[] = "'".$_rate->getCode()."':".(float)$_rate->getPrice(); ?>
                <li>
                    <input style="margin-right:8px;" name="vendor_shipping_method__<?php echo $_vendorId?>" type="radio" value="<?php echo $_rate->getCode() ?>" id="vendor_rates_method_<?php echo $_rate->getCode() ?>"<?php if(in_array($_rate->getCode(),$this->getSelectedVendorShipping())) echo ' checked="checked"' ?> class="radio vendor-rates vendor-rates-required"/>
                    <label for="vendor_rates_method_<?php echo $_rate->getCode() ?>"><?php echo $this->escapeHtml($_rate->getMethodTitle()) ?>
                    <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
                    <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>
                    <?php echo $_excl; ?>
                    <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
                        (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
                    <?php endif; ?>
                    </label>
                </li>
            <?php endforeach; ?>
            </ul>
        </dd>
        <?php endforeach;?>
        <script type="text/javascript">
            /*VENDOR FLATRATE*/
	        Validation.add('vendor-rates-required','<?php echo Mage::helper('csmultishipping')->__('Please select shipping method for each vendor.')?>',function(v,elm){
	        	var check = false;
    	        elm.up(1).select('.vendor-rates-required').each(function(el){
    	        	if(el.checked) check=true;
    	        });

				return check;

	        });
	        var updateShippingForm = new VarienForm('co-shipping-method-form');
	        var SEPARATOR = '<?php echo Ced_CsMultiShipping_Model_Shipping::SEPARATOR;?>';
	        var METHODS_SEPARATOR = '<?php echo Ced_CsMultiShipping_Model_Shipping::METHOD_SEPARATOR;?>';
	        $$('.vendor-rates').each(function(el){
		        el.observe('click',function(){
			        $$('input[name="estimate_method"]').each(function(elm){
			        	if(!elm.readAttribute('data-vendor-rates-method')) elm.checked = false;
			        });
			        
					var rates = new Array();
			        $$('.vendor-rates').each(function(elm){
				        if(elm.checked){
    				        if(rates.length == 0) {
        				        rates.push(elm.value);
    				        }else{
        				        var position = false;
    				        	for(var i = 0; i < rates.length; i ++){
        				        	var sortedValue = rates[i].split(SEPARATOR);
        				        	var newValue 	= elm.value.split(SEPARATOR);
        				        	if(parseInt(newValue[1]) < parseInt(sortedValue[1])){
            				        	position = i; 
            				        	break;
        				        	}
    				        	}
    				        	if(position === false) rates.push(elm.value);
    				        	else{
    				        		for(i = rates.length-1; i >= position; i --){
        				        		rates[i+1] = rates[i];
    				        		}
    				        		rates[position] = elm.value;
    				        	}
    				        }
				        }
			        });

			        var rate = rates.join(METHODS_SEPARATOR);
			        if($('ced_method_vendor_rates_'+rate)){
			        	$('ced_method_vendor_rates_'+rate).checked = true;
			        }
		        });
	        });
        </script>
	</dl>
    <dl class="sp-methods">
    <?php $shippingCodePrice = array(); ?>
    <?php $_sole = count($_shippingRateGroups) == 1; foreach ($_shippingRateGroups as $code => $_rates): ?>
    	<?php if($code == 'vendor_rates'):?>
    		<dd style="display: none;">
	            <ul>
	            <?php $_sole = $_sole && count($_rates) == 1; foreach ($_rates as $_rate): ?>
	                <?php $shippingCodePrice[] = "'".$_rate->getCode()."':".(float)$_rate->getPrice(); ?>
	                <li>
	                   <?php if ($_rate->getErrorMessage()): ?>
	                    <ul class="messages"><li class="error-msg"><ul><li><?php echo $this->escapeHtml($_rate->getErrorMessage()) ?></li></ul></li></ul>
	                   <?php else: ?>
	                        <?php if ($_sole) : ?>
	                        <span class="no-display"><input name="shipping_method" type="radio" value="<?php echo $_rate->getCode() ?>" id="ced_method_<?php echo $_rate->getCode() ?>" checked="checked" /></span>
	                        <?php else: ?>
	                        <input name="shipping_method" type="radio" value="<?php echo $_rate->getCode() ?>" id="ced_method_<?php echo $_rate->getCode() ?>"<?php if($_rate->getCode()===$this->getAddressShippingMethod()) echo ' checked="checked"' ?> class="radio"/>
	
	                        <?php if ($_rate->getCode() === $this->getAddressShippingMethod()): ?>
	                        <script type="text/javascript">
	                            //<![CDATA[
	                                lastPrice = <?php echo (float)$_rate->getPrice(); ?>;
	                            //]]>
	                        </script>
	                        <?php endif; ?>
	
	                        <?php endif; ?>
	                        <label for="ced_method_<?php echo $_rate->getCode() ?>"><?php echo $this->escapeHtml($_rate->getMethodTitle()) ?>
	                        <?php $_excl = $this->getShippingPrice($_rate->getPrice(), $this->helper('tax')->displayShippingPriceIncludingTax()); ?>
	                        <?php $_incl = $this->getShippingPrice($_rate->getPrice(), true); ?>
	                        <?php echo $_excl; ?>
	                        <?php if ($this->helper('tax')->displayShippingBothPrices() && $_incl != $_excl): ?>
	                            (<?php echo $this->__('Incl. Tax'); ?> <?php echo $_incl; ?>)
	                        <?php endif; ?>
	                        </label>
	                   <?php endif ?>
	                </li>
	            <?php endforeach; ?>
	            </ul>
	        </dd>
    	<?php else:?>
    	<?php /*else  */?>
        <?php endif;?>
    <?php endforeach; ?>
    </dl>
<script type="text/javascript">
//<![CDATA[
    <?php if (!empty($shippingCodePrice)): ?>
        var shippingCodePrice = {<?php echo implode(',',$shippingCodePrice); ?>};
    <?php endif; ?>

    $$('input[type="radio"][name="shipping_method"]').each(function(el){
        Event.observe(el, 'click', function(){
            if (el.checked == true) {
                var getShippingCode = el.getValue();
                <?php if (!empty($shippingCodePrice)): ?>
                    var newPrice = shippingCodePrice[getShippingCode];
                    if (!lastPrice) {
                        lastPrice = newPrice;
                        quoteBaseGrandTotal += newPrice;
                    }
                    if (newPrice != lastPrice) {
                        quoteBaseGrandTotal += (newPrice-lastPrice);
                        lastPrice = newPrice;
                    }
                <?php endif; ?>
                checkQuoteBaseGrandTotal = quoteBaseGrandTotal;
                return false;
            }
       });
    });
    $$('input[name="shipping_method"]').each(function(elm){
    	elm.observe('click',function(){
        	$$('.vendor-rates').each(function(el){
	        	el.checked = false;
        	});
    	});
    });
//]]>
</script>
<?php } ?>
<?php endif; ?>
